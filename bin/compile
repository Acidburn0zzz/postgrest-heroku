#!/bin/bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e            # fail fast
set -o pipefail   # do not ignore exit codes when piping output

# Heroku-provided params
BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"

DBAPI_VER=${DBAPI_VER:-0.1.0.0}

export_env_dir() {
  local env_dir=${1:-$ENV_DIR}
  local whitelist_regex=${2:-''}
  local blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|BUILDPACK_URL)$'}

  if [ -d "$env_dir" ]; then
    echo "-----> Exporting config vars"
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
        echo "       $e" &&
        export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir

BIN="dbapi-${DBAPI_VER}"

if [ ! -e $CACHE_DIR/$BIN ]; then
  BIN_URL="http://bin.begriffs.com/dbapi/heroku/${BIN}.tar.xz"
  if curl --output /dev/null --silent --head --fail $BIN_URL; then
    echo "-----> Downloading and caching DBAPI $DBAPI_VER binary"
    curl -# -L $BIN_URL | tar xJ -C $CACHE_DIR
  else
    die "-----> Could not find prebuilt $BIN"
  fi
else
  echo "-----> Restoring cached $BIN"
  cp -R $CACHE_DIR/$BIN $BUILD_DIR
fi

echo "-----> Installing sqitch"
sudo apt-get install sqitch

echo "-----> Adding sqitch database target"
sqitch target add heroku_db $DATABASE_URL

echo "-----> Making this target the default"
sqitch config core.pg.target heroku_db

echo "-----> Creating Procfile"
cat <<EOF > $BUILD_DIR/Procfile
./${BIN} -p \$PORT -d \$DATABASE_URL -a $ANONYMOUS_ROLE
EOF

echo "-----> ❤ stay declarative ❤"
